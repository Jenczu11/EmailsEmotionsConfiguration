server:
  port: 8080
info:
  app:
    uuid: ${app_uuid}
  tags:
    name: ${spring.application.name}
    app-id: ${info.app.uuid}
spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:mysql://localhost:3308/users?useSSL=false
    username: user
    password: emailsemotions
    initialization-mode: ALWAYS
jwt:
  secret: b3ce19667a24ef694e0e41bdb476d107817d62f294fd45njkhasfih3485ru029rhjn29udfj9sjja9fhaopkpkda
  # 30 minutes
  expirationMs: 1800000
  deleteExpiredTokens:
    cron: 1 * * * * ?
eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${info.app.uuid}
    # Lease Reneval and Expiration times - to unregister in eureka
    leaseRenewalIntervalInSeconds: 15
    leaseExpirationDurationInSeconds: 30
  client:
    healthcheck:
      enabled: true
---
spring:
  config:
    activate:
      on-profile: docker
  # zipkin:
  #   baseUrl: http://tracing-server:9411
  app:
    uuid: ${app_uuid}
  tags:
    name: ${spring.application.name}
    app-id: ${info.app.uuid}
  datasource:
    url: jdbc:mysql://db-users:3306/users?useSSL=false
    username: user
    password: emailsemotions
    initialization-mode: ALWAYS
info:
  app:
    uuid: ${app_uuid}
  tags:
    name: ${spring.application.name}
    app-id: ${info.app.uuid}
jwt:
  secret: b3ce19667a24ef694e0e41bdb476d107817d62f294fd45njkhasfih3485ru029rhjn29udfj9sjja9fhaopkpkda
  # 30 minutes
  expirationMs: 1800000
  deleteExpiredTokens:
    cron: 1 * * * * ?
eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${info.app.uuid}
    # Lease Reneval and Expiration times - to unregister in eureka
    leaseRenewalIntervalInSeconds: 15
    leaseExpirationDurationInSeconds: 30
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
